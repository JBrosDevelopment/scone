const priv a: b<C is (This && That) || There, T, G is A>(a: b, c<d>: e = f) {
    d;
    return f;
}

;// TODO:
// u0: add(u8: a, u8: b) { }
// string: to_string() => "Obj [" + name.to_string() + "]";
// typedef (u8, u8, u8) -> Color;
// enum Files { File1 = 0, File2 }
// class Color -> Traits { }
// struct Pixel -> Extends { }
// trait Number { }