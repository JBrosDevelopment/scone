//ArrayExpression
void: main() {
    i32[]: arr = []; // in declaration
    arr.push(99); // pushing
    (u8, u8)[][]: b = [[(0, 0)], [], [(1, 1)]]; // complex type
    use_array([0, 1, 2]); // used in function
} 
//AsCast
//Assignment
//Break
//ClassDeclaration
//CodeBlock
//Constant
//Continue
//Discard
//EnumDeclaration
//EnumDeclaration
//For
//ForEach
//FunctionCall
//FunctionDeclaration
//Identifier
//Indexer
//If
//IsCheck
//LambdaExpression
//Match
//ObjectInstantiation
//Operator
//ReturnExpression
//ScopedExpression
//Shebang
//StructDeclaration
//TernaryOperator
//TraitDeclaration
//TupleDeclaration
//TupleExpression
//TypeDef
//TypeDefinition
//TypeIdentifier
//UnaryOperator
//Use
//VariableDeclaration
//While
//DeferStatement